version: '3.3'
services:

  frontend:
    container_name: foodgram-front
    build: ../frontend
    volumes:
      - ../frontend/:/app/result_build/
    environment:
      API_URL: ${API_URL}
  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - backend_static_volume:/static
  backend:
    container_name: foodgram-back
    build: ../backend
    volumes:
      - backend_static_volume:/app/static
    depends_on:
      - db
    environment:
      DB_ENGINE: django.db.backends.postgresql
      DB_NAME: foodgram
      POSTGRES_DB: foodgram
      POSTGRES_USER: foodgram_user
      POSTGRES_PASSWORD: foodgram_pass
      DB_HOST: db
      DB_PORT: 5432
  db:
    container_name: foodgram-db
    image: postgres:16
    restart: always
    volumes:
      - pg_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: foodgram
      POSTGRES_USER: foodgram_user
      POSTGRES_PASSWORD: foodgram_pass
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U foodgram_user -d foodgram" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  backend_static_volume:
  pg_data: